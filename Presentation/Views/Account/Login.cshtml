@using AccountProject.BusinessLogicLayer.DTOs


@model LoginUserDTO

@{
    ViewData["Title"] = "Login";
}

<div class="login-container">
    <div class="login-card">
        <div class="login-header">
            <div class="brand-logo">
                <svg width="50" height="50" viewBox="0 0 24 24" fill="none" xmlns="http://www.w3.org/2000/svg">
                    <path d="M20 7L12 3L4 7V17L12 21L20 17V7Z" stroke="currentColor" stroke-width="2" stroke-linecap="round" stroke-linejoin="round" />
                    <path d="M12 12L12 21" stroke="currentColor" stroke-width="2" stroke-linecap="round" stroke-linejoin="round" />
                    <path d="M12 12L20 7" stroke="currentColor" stroke-width="2" stroke-linecap="round" stroke-linejoin="round" />
                    <path d="M12 12L4 7" stroke="currentColor" stroke-width="2" stroke-linecap="round" stroke-linejoin="round" />
                </svg>
            </div>
            <h1 class="login-title">Welcome Back</h1>
            <p class="login-subtitle">Enter your credentials to access your account</p>
            <svg class="header-wave" xmlns="http://www.w3.org/2000/svg" viewBox="0 0 1440 320">
                <path fill-opacity="1" d="M0,96L48,112C96,128,192,160,288,160C384,160,480,128,576,133.3C672,139,768,181,864,176C960,171,1056,117,1152,101.3C1248,85,1344,107,1392,117.3L1440,128L1440,320L1392,320C1344,320,1248,320,1152,320C1056,320,960,320,864,320C768,320,672,320,576,320C480,320,384,320,288,320C192,320,96,320,48,320L0,320Z"></path>
            </svg>
        </div>

        <div class="login-body">
            <form asp-action="Login" method="post" id="loginForm">
                <div asp-validation-summary="ModelOnly" class="text-danger validation-summary"></div>

                <div class="form-floating mb-4">
                    <input asp-for="Email" class="form-control custom-input" id="floatingEmail" placeholder="name@example.com">
                    <label asp-for="Email" for="floatingEmail">Email address</label>
                    <span asp-validation-for="Email" class="text-danger validation-message"></span>
                </div>

                <div class="form-floating mb-3">
                    <input asp-for="Password" type="password" class="form-control custom-input" id="floatingPassword" placeholder="Password">
                    <label asp-for="Password" for="floatingPassword">Password</label>
                    <span asp-validation-for="Password" class="text-danger validation-message"></span>
                    <button type="button" class="password-toggle" onclick="togglePassword('floatingPassword')">
                        <i class="bi bi-eye"></i>
                    </button>
                </div>

                <div class="d-flex justify-content-between mb-4 remember-me-container">
                    <div class="form-check">
                        <input asp-for="RememberMe" class="form-check-input custom-checkbox" id="rememberMe">
                        <label asp-for="RememberMe" class="form-check-label" for="rememberMe">Remember me</label>
                    </div>
                    <div>
                        <a href="#" class="forgot-password">Forgot password?</a>
                    </div>
                </div>

                <button type="submit" class="btn btn-primary login-button">
                    <span>Sign In</span>
                    <svg width="24" height="24" viewBox="0 0 24 24" fill="none" xmlns="http://www.w3.org/2000/svg">
                        <path d="M5 12H19M19 12L12 5M19 12L12 19" stroke="currentColor" stroke-width="2" stroke-linecap="round" stroke-linejoin="round" />
                    </svg>
                </button>
            </form>

            <div class="register-link">
                <p>Don't have an account? <a asp-action="Register">Create an account</a></p>
            </div>
        </div>
    </div>
</div>

@section Scripts {
    <script>
        function togglePassword(inputId) {
            const passwordInput = document.getElementById(inputId);
            const toggleButton = passwordInput.parentElement.querySelector('.password-toggle');
            const icon = toggleButton.querySelector('i');

            if (passwordInput.type === 'password') {
                passwordInput.type = 'text';
                icon.classList.remove('bi-eye');
                icon.classList.add('bi-eye-slash');
            } else {
                passwordInput.type = 'password';
                icon.classList.remove('bi-eye-slash');
                icon.classList.add('bi-eye');
            }
        }
    </script>
}